
name: Build NetHunter Kernel for A30s

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 90  # Added build timeout

    steps:
    - name: Clone Kernel Source
      uses: actions/checkout@v4  # Updated to v4

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential git clang lld bc bison flex libssl-dev \
          libncurses5-dev libelf-dev gcc-aarch64-linux-gnu \
          binutils-aarch64-linux-gnu device-tree-compiler libslang2-dev

    - name: Set up Clang Toolchain
      uses: ClangBuiltLinux/setup-clang@v1  # More reliable method
      with:
        version: '17'

    - name: Configure Kernel
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        export ANDROID_MAJOR_VERSION=11
        export KBUILD_BUILD_USER=NetHunter
        export KBUILD_BUILD_HOST=GitHub

        make O=out ARCH=arm64 a30s_defconfig

    - name: Disable VDSO for Clang compatibility
      run: |
        # More robust config modification
        ./scripts/config --file out/.config --disable COMPAT_VDSO
        make O=out ARCH=arm64 olddefconfig

    - name: Patch DTC Lexer to fix yylloc error
      run: |
        # Apply patch only if needed
        if [ -f scripts/dtc/dtc-lexer.l ]; then
          sed -i '/YYLTYPE yylloc;/d' scripts/dtc/dtc-lexer.l
        fi
        if [ -f scripts/dtc/dtc-lexer.lex.c_shipped ]; then
          sed -i '/YYLTYPE yylloc;/d' scripts/dtc/dtc-lexer.lex.c_shipped
        fi

    - name: Build Kernel
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        export ANDROID_MAJOR_VERSION=11
        export KBUILD_BUILD_USER=NetHunter
        export KBUILD_BUILD_HOST=GitHub
        export HOSTCFLAGS="-Wno-error"

        # Use LLVM=1 for full clang toolchain
        make -j$(($(nproc) + 1)) O=out ARCH=arm64 LLVM=1

    - name: Concatenate Image.gz and DTB
      run: |
        cat out/arch/arm64/boot/Image.gz out/arch/arm64/boot/dts/exynos/*.dtb > out/arch/arm64/boot/Image.gz-dtb

    - name: Prepare Flashable ZIP (AnyKernel3)
      run: |
        git clone https://github.com/osm0sis/AnyKernel3
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/zImage
        cd AnyKernel3
        zip -r9 ../Nethunter-A30s-Kernel.zip *

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: NetHunter-A30s-Kernel
        path: Nethunter-A30s-Kernel.zip

    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: kernel-$(date +%Y%m%d%H%M)
        files: Nethunter-A30s-Kernel.zip
        body: "Automated NetHunter kernel build for Galaxy A30s"
